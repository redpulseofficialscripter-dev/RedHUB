local RedHUB = {}
RedHUB.__index = RedHUB

-- Сервисы
local userInputService = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")
local runService = game:GetService("RunService")

-- Конфигурация анимации
local INTRO_DURATION = 3.0
local EASE_STYLE = Enum.EasingStyle.Quint
local EASE_DIRECTION = Enum.EasingDirection.Out

function RedHUB:CreateWindow(config)
    local self = setmetatable({}, RedHUB)
    
    -- Конфигурация по умолчанию
    self.Config = {
        Name = config.Name or "REDHUB",
        Theme = config.Theme or {
            Primary = Color3.fromRGB(255, 0, 0),
            Secondary = Color3.fromRGB(30, 30, 30),
            Background = Color3.fromRGB(20, 20, 20),
            Text = Color3.fromRGB(255, 255, 255),
            Accent = Color3.fromRGB(200, 0, 0)
        },
        WindowSize = config.WindowSize or UDim2.new(0, 400, 0, 500)
    }
    
    self:CreateSimpleIntro()
    task.wait(INTRO_DURATION + 0.8)
    self:CreateMainWindow()
    
    return self
end

function RedHUB:CreateSimpleIntro()
    -- Создаем простой GUI для интро
    self.IntroGui = Instance.new("ScreenGui")
    self.IntroGui.Name = "RedHUB_Intro"
    self.IntroGui.Parent = game:GetService("CoreGui")
    self.IntroGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Центральная надпись RPHUB (изначально маленькая и повернутая)
    self.CenterLabel = Instance.new("TextLabel")
    self.CenterLabel.Name = "CenterLabel"
    self.CenterLabel.Size = UDim2.new(0, 50, 0, 50)
    self.CenterLabel.Position = UDim2.new(0.5, -25, 0.5, -25)
    self.CenterLabel.AnchorPoint = Vector2.new(0.5, 0.5)
    self.CenterLabel.BackgroundTransparency = 1
    self.CenterLabel.Text = "RPHUB"
    self.CenterLabel.TextColor3 = self.Config.Theme.Primary
    self.CenterLabel.Font = Enum.Font.GothamBlack
    self.CenterLabel.TextSize = 10
    self.CenterLabel.TextTransparency = 0
    self.CenterLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    self.CenterLabel.TextStrokeTransparency = 0.5
    self.CenterLabel.Rotation = -360
    self.CenterLabel.ZIndex = 10
    self.CenterLabel.Parent = self.IntroGui
    
    -- Запускаем анимацию
    self:PlaySimpleIntro()
end

function RedHUB:PlaySimpleIntro()
    -- Фаза 1: Выезд из пустоты с вращением
    local phase1 = tweenService:Create(
        self.CenterLabel,
        TweenInfo.new(INTRO_DURATION/2, EASE_STYLE, EASE_DIRECTION),
        {
            Size = UDim2.new(1, 0, 1, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0),
            TextSize = 120,
            Rotation = 0
        }
    )
    phase1:Play()
    
    task.wait(INTRO_DURATION/2)
    
    -- Фаза 2: Мерцание и постепенное исчезновение
    local blinkCount = 0
    local maxBlinks = 4
    
    local function blink()
        if blinkCount >= maxBlinks then
            -- Финальное исчезновение
            local fadeOut = tweenService:Create(
                self.CenterLabel,
                TweenInfo.new(INTRO_DURATION/4, EASE_STYLE, EASE_DIRECTION),
                {
                    TextTransparency = 1,
                    TextStrokeTransparency = 1
                }
            )
            fadeOut:Play()
            fadeOut.Completed:Connect(function()
                self.IntroGui:Destroy()
            end)
            return
        end
        
        -- Мерцание: появляется
        local blinkIn = tweenService:Create(
            self.CenterLabel,
            TweenInfo.new(0.15, EASE_STYLE, EASE_DIRECTION),
            {
                TextTransparency = 0,
                TextStrokeTransparency = 0.3
            }
        )
        
        -- Мерцание: исчезает
        local blinkOut = tweenService:Create(
            self.CenterLabel,
            TweenInfo.new(0.15, EASE_STYLE, EASE_DIRECTION),
            {
                TextTransparency = 0.7,
                TextStrokeTransparency = 0.9
            }
        )
        
        blinkIn:Play()
        blinkIn.Completed:Connect(function()
            task.wait(0.1)
            blinkOut:Play()
            blinkOut.Completed:Connect(function()
                blinkCount = blinkCount + 1
                task.wait(0.1)
                blink()
            end)
        end)
    end
    
    blink()
end

function RedHUB:CreateMainWindow()
    -- Основное окно GUI
    self.MainGui = Instance.new("ScreenGui")
    self.MainGui.Name = "RedHUB_Main"
    self.MainGui.Parent = game:GetService("CoreGui")
    self.MainGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Основной фрейм (изначально скрыт)
    self.MainFrame = Instance.new("Frame")
    self.MainFrame.Name = "MainFrame"
    self.MainFrame.Size = UDim2.new(0, 0, 0, 0)
    self.MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    self.MainFrame.BackgroundColor3 = self.Config.Theme.Background
    self.MainFrame.BorderSizePixel = 0
    self.MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    self.MainFrame.ClipsDescendants = true
    self.MainFrame.Parent = self.MainGui
    
    -- Заголовок
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = self.Config.Theme.Secondary
    titleBar.BorderSizePixel = 0
    titleBar.ZIndex = 2
    titleBar.Parent = self.MainFrame
    
    local titleText = Instance.new("TextLabel")
    titleText.Name = "TitleText"
    titleText.Size = UDim2.new(1, -60, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = self.Config.Name
    titleText.TextColor3 = self.Config.Theme.Primary
    titleText.Font = Enum.Font.GothamBold
    titleText.TextSize = 14
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.ZIndex = 3
    titleText.Parent = titleBar
    
    -- Кнопка закрытия
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.BackgroundColor3 = self.Config.Theme.Accent
    closeButton.BorderSizePixel = 0
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 14
    closeButton.ZIndex = 3
    closeButton.Parent = titleBar
    
    closeButton.MouseButton1Click:Connect(function()
        self.MainGui:Destroy()
    end)
    
    -- Контейнер вкладок
    self.TabContainer = Instance.new("ScrollingFrame")
    self.TabContainer.Name = "TabContainer"
    self.TabContainer.Size = UDim2.new(1, 0, 1, -30)
    self.TabContainer.Position = UDim2.new(0, 0, 0, 30)
    self.TabContainer.BackgroundTransparency = 1
    self.TabContainer.BorderSizePixel = 0
    self.TabContainer.ScrollBarThickness = 4
    self.TabContainer.AutomaticCanvasSize = Enum.AutomaticSize.Y
    self.TabContainer.Parent = self.MainFrame
    
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Padding = UDim.new(0, 8)
    uiListLayout.Parent = self.TabContainer
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 10)
    padding.PaddingRight = UDim.new(0, 10)
    padding.PaddingTop = UDim.new(0, 10)
    padding.PaddingBottom = UDim.new(0, 10)
    padding.Parent = self.TabContainer
    
    -- Анимация появления основного окна
    local appearTween = tweenService:Create(
        self.MainFrame,
        TweenInfo.new(0.5, EASE_STYLE, EASE_DIRECTION),
        {Size = self.Config.WindowSize}
    )
    appearTween:Play()
    
    -- Перетаскивание окна
    local dragging = false
    local dragInput, dragStart, startPos
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = self.MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    userInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            self.MainFrame.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X,
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

function RedHUB:AddTab(tabName)
    local tabFrame = Instance.new("Frame")
    tabFrame.Name = tabName .. "Tab"
    tabFrame.Size = UDim2.new(1, 0, 0, 0)
    tabFrame.BackgroundTransparency = 1
    tabFrame.AutomaticSize = Enum.AutomaticSize.Y
    tabFrame.Parent = self.TabContainer
    
    local tabLayout = Instance.new("UIListLayout")
    tabLayout.Padding = UDim.new(0, 6)
    tabLayout.Parent = tabFrame
    
    local tab = {
        TabFrame = tabFrame,
        Parent = self
    }
    
    function tab:AddButton(buttonName, callback)
        local button = Instance.new("TextButton")
        button.Name = buttonName
        button.Size = UDim2.new(1, 0, 0, 35)
        button.BackgroundColor3 = self.Parent.Config.Theme.Secondary
        button.BorderSizePixel = 0
        button.Text = buttonName
        button.TextColor3 = self.Parent.Config.Theme.Text
        button.Font = Enum.Font.Gotham
        button.TextSize = 12
        button.Parent = tabFrame
        
        button.MouseButton1Click:Connect(callback)
        
        return button
    end
    
    function tab:AddLabel(labelText)
        local label = Instance.new("TextLabel")
        label.Name = "Label"
        label.Size = UDim2.new(1, 0, 0, 20)
        label.BackgroundTransparency = 1
        label.Text = labelText
        label.TextColor3 = self.Parent.Config.Theme.Text
        label.Font = Enum.Font.Gotham
        label.TextSize = 12
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = tabFrame
        
        return label
    end
    
    function tab:AddSlider(sliderName, options, callback)
        local sliderFrame = Instance.new("Frame")
        sliderFrame.Name = sliderName
        sliderFrame.Size = UDim2.new(1, 0, 0, 45)
        sliderFrame.BackgroundTransparency = 1
        sliderFrame.Parent = tabFrame
        
        local sliderText = Instance.new("TextLabel")
        sliderText.Name = "SliderText"
        sliderText.Size = UDim2.new(1, 0, 0, 20)
        sliderText.BackgroundTransparency = 1
        sliderText.Text = sliderName .. ": " .. options.Default
        sliderText.TextColor3 = self.Parent.Config.Theme.Text
        sliderText.Font = Enum.Font.Gotham
        sliderText.TextSize = 11
        sliderText.Parent = sliderFrame
        
        local sliderBar = Instance.new("Frame")
        sliderBar.Name = "SliderBar"
        sliderBar.Size = UDim2.new(1, 0, 0, 6)
        sliderBar.Position = UDim2.new(0, 0, 0, 25)
        sliderBar.BackgroundColor3 = self.Parent.Config.Theme.Secondary
        sliderBar.BorderSizePixel = 0
        sliderBar.Parent = sliderFrame
        
        local sliderFill = Instance.new("Frame")
        sliderFill.Name = "SliderFill"
        sliderFill.Size = UDim2.new((options.Default - options.Min) / (options.Max - options.Min), 0, 1, 0)
        sliderFill.BackgroundColor3 = self.Parent.Config.Theme.Primary
        sliderFill.BorderSizePixel = 0
        sliderFill.Parent = sliderBar
        
        local sliding = false
        
        sliderBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                sliding = true
            end
        end)
        
        sliderBar.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                sliding = false
            end
        end)
        
        userInputService.InputChanged:Connect(function(input)
            if sliding and input.UserInputType == Enum.UserInputType.MouseMovement then
                local relativeX = (input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X
                relativeX = math.clamp(relativeX, 0, 1)
                local value = options.Min + (relativeX * (options.Max - options.Min))
                value = math.floor(value * 100) / 100
                
                sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
                sliderText.Text = sliderName .. ": " .. value
                callback(value)
            end
        end)
        
        return sliderFrame
    end
    
    return tab
end

-- Экспорт библиотеки
return RedHUB
